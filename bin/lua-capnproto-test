#!/usr/bin/env luajit

local test = require("test_capnp")
local cjson = require("cjson")
local util = require("util")

local insert = table.insert
local concat = table.concat
-- print(arg[1], arg[2])

local action = arg[1]
local test_case = arg[2]

-- print(action, test_case)

function pprint(val, T)
    print(util.to_text(val, T))
end

local type_map = {
    simpleTest              = "SimpleTestStruct",
    textListTypeTest        = "ListTest",
    uInt8DefaultValueTest   = "TestDefaults",
    constTest               = "SimpleTestStruct",
}

local typ = assert(type_map[test_case])
if action == "decode" then
    local content = io.stdin:read("*a")
    util.write_file("decode_" .. test_case, content)
    local r = test[typ].parse(content)
    pprint(r, test[typ])
elseif action == "encode" then
    local r = test[typ].serialize({})
    util.write_file("encode_" .. test_case, r)
    print(r)
end
